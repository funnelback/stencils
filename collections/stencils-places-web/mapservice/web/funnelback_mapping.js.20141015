
//Set origin from geo-coords
    var ori_x = -41.155038;
    var ori_y = 145.325089;

    var origin = new L.LatLng(ori_x, ori_y);

//   var map = new L.Map('mapResults');
  var map = new L.Map('mapResults', {center: origin, zoom: 12});
//    var googleLayer = new L.Google('ROADMAP');
    var mapPoints;
    var marker_clusters;
    var markers;


var geojsonMarkerOptions = {
    radius: 8,
    fillColor: "#ff7800",
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8
};


var osm = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
var ggl = new L.Google('ROADMAP');
var ggl2 = new L.Google('TERRAIN');
map.addLayer(ggl);
map.addControl(new L.Control.Layers( {'OSM':osm, 'Google':ggl, 'Google Terrain':ggl2}, {}));

function funnelback_map(jsondataurl) {

  var jqxhr = jQuery.ajax({
      url: jsondataurl,
      dataType: "json"
  })
  .done(function(data) {
    mapPoints = data
    addPoints(mapPoints)
    console.log( "success" );
  })
  .fail(function(jqxhr, textStatus, thrownError) {
    console.log( "error "+textStatus);
  })
  .always(function() {
    console.log( "complete" );
  });


}


    function pointToLayer(feature, latlng) {
       var pin = new L.marker(latlng);
//       var pin = new L.marker(latlng, {icon: new L.icon({iconUrl: 'http://${question.collection.configuration.value("custom.dthostname")}/media/map-markers/result-type-'+feature.properties.productType.toLowerCase()+'.png',iconSize: iSize, iconAnchor: iAnchor, popupAnchor: pAnchor})})
       var popupContent = ""

            if(feature.properties.productType) {
                popupContent += "<div class=\""+feature.properties.productType+"\">"+feature.properties.productType+"</div> ";
            }
            if(feature.properties.thumburl) {
                popupContent += "<img src=\"" + feature.properties.thumburl+"\" width=\"65\" height=\"43\" alt=\"\" style=\"float:left;\"/>";
            }
            popupContent+="<span class=\"heading\"><a href=\"" + feature.properties.url + "\" title=\"" + feature.properties.url + "\">" + feature.properties.title + "</a></span>";

            if(feature.properties.eventDatesPretty) {
                popupContent += "<span class=\"eventDates\">"+feature.properties.eventDatesPretty+"</span> ";
            }

            if(feature.properties.description) {
                popupContent += "<div class=\"description\">"
                popupContent += truncate(feature.properties.description,99)+"<a class=\"more-details-button\" href=\""+feature.properties.clickTrackingUrl+"\">More...</a></div>";
            }
            popupContent += "<a class=\"close\">Close</a>";
//        pin.bindPopup(popupContent);
//       pin.addTo(map);
return pin;
    }

    function onEachFeature(feature, layer) { console.log("OEF");
/*        var popupContent = "<h3><a href=\"" + feature.properties.url + "\" title=\"" + feature.properties.url + "\">" + feature.properties.title + "</a></h3>";
        // Extend popupContent with metadata fields as required.
        if(feature.properties.description) {
            popupContent += "<div class=\"product-description\">"
            if(feature.properties.thumburl) {
                popupContent += "<img src=\"" + feature.properties.thumburl+"\" width=\"65\" height=\"43\" alt=\"\" style=\"float:left;\"/>";
            }
            if(feature.properties.productType) {
                popupContent += "<span class=\"prodtype\">"+feature.properties.productType+"</span> ";
            }
            if(feature.properties.eventDatesPretty) {
                popupContent += "<span class=\"eventDates\">"+feature.properties.eventDatesPretty+"</span> ";
            }
            popupContent += feature.properties.description.substring(0,250)+"<a class=\"more-details-button\" href=\"/search/click.cgi?component=0&url="+feature.properties.clickTrackingUrl+"\">More...</div>";
        }
        layer.bindPopup(popupContent);*/
        if (typeof mapMarkers != 'undefined') {
            mapMarkers[feature.properties.rank] = layer.bindPopup(popupContent);
        }
    }




function addPoints(data) {

//if (typeof marker_clusters !== "undefined" && marker_clusters != null) {
//  map.removeLayer(marker_clusters);
//}
		mapPoints = data


markers = new L.geoJson(mapPoints, {pointToLayer: function (feature, latlng) {
        return L.circleMarker(latlng, geojsonMarkerOptions);
	}
    });


                console.log("addpoints"+mapPoints);
                //markers = new L.geoJson(mapPoints, {onEachFeature: onEachFeature})
                marker_clusters = L.markerClusterGroup();
                marker_clusters.addLayer(markers);
                //markers2 = markers; //marker_clusters;
                //map.addLayer(markers);
                //map.fitBounds(markers.getBounds());
                map.addLayer(marker_clusters);
                map.fitBounds(marker_clusters.getBounds());
                //jsonAjaxResponse(data, cls);
}
