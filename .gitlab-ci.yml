variables:
    # github.com host key, required to push to GitHub
    GITHUB_HOST_KEY: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
    # SSH config to use our deploy key to push to GitHub
    GITHUB_SSH_CONFIG: |
        Host github.com
            User git
            IdentityFile ~/.ssh/github_deploy_key

stages:
    - build
    - sync_github

# Main build script template (hence the leading dot), used by the actual build jobs
.build:
    stage: build
    script:
        # The build needs to be under $SEARCH_HOME/share/stencils/,
        # As it depends on a relative path to locate the Groovy JAR
        # ("../../lib/java/all/groovy-all-X.Y.Z.jar" - see build.gradle).
        #
        # Unfortunately GitLab CI has no option to use a specific directory for
        # checkout, so we need to copy files ourselves in the right location.
        - pushd .
        - mkdir -p $SEARCH_HOME/share/
        - cp -rp $PWD $SEARCH_HOME/share/stencils
        - cd $SEARCH_HOME/share/stencils
        - ./gradlew clean build assemble
        # Copy our artifacts back to the GitLab CI folder
        - popd
        - cp -r $SEARCH_HOME/share/stencils/build build
    artifacts:
        paths:
            - build/distributions/*.zip
    tags:
        - docker

# Build and test for support Funnelback versions below

build_15_12:
    extends: .build
    image: docker-hub.squiz.net/stencils/stencils:15.12.0.x

build_15_14:
    extends: .build
    image: docker-hub.squiz.net/stencils/stencils:15.14.0.x

build_15_16:
    extends: .build
    image: docker-hub.squiz.net/stencils/stencils:15.16.0.x

# Sync this repo with our GitHub public mirror
sync_github:
    stage: sync_github
    image: alpine
    script:
        - apk update
        - apk add git openssh-client
        # Only push to GitHub if the deploy key environment variable is set
        # The variable is set in the GitLab CI config, and only on protected
        # branches (master, release branches) so that we don't push every
        # single feature / dev branch to GitHub
        - test ! -z "${GITHUB_DEPLOY_KEY}" || exit 0
        - git remote add github git@github.com:funnelback/stencils.git || true
        - mkdir -p ~/.ssh
        - echo "${GITHUB_DEPLOY_KEY}" > ~/.ssh/github_deploy_key
        - echo "${GITHUB_HOST_KEY}" >> ~/.ssh/known_hosts
        - chmod 0600 ~/.ssh/github_deploy_key
        - echo "${GITHUB_SSH_CONFIG}" >> ~/.ssh/config
        # Checkout required as we are in detached HEAD state
        - git checkout ${CI_COMMIT_REF_NAME}
        - git push github ${CI_COMMIT_REF_NAME}
    tags:
        - docker
