/**
 * Attempt to find the Groovy version to use depending on the Groovy JAR present
 * in $SEARCH_HOME/lib/java/all/groovy-all-X.Y.Z.jar
 *
 * @return A Groovy version number
 * @throws IllegalStateException if the Groovy JAR cannot be located
 */
def findGroovyVersion () {
    def groovyJar = new File(projectDir, "../../lib/java/all/").listFiles()
    .find() { file -> file.name.startsWith("groovy-all-") && file.name.endsWith(".jar") }

    if (!groovyJar) {
        throw new IllegalStateException("Unable to locate groovy-all-X.Y.Z.jar file in in \$SEARCH_HOME/lib/java/all/")
    }

    return groovyJar.name
    .replace("groovy-all-", "")
    .replace(".jar", "")
}

plugins {
    id 'groovy'
}

repositories {
    mavenCentral()
}

project.ext {
    // Must be identical to the Groovy version Funnelback ships with,
    // so we look it up in lib/java/all/
    groovyVersion = findGroovyVersion()
}

project.with {
    group = 'com.funnelback.stencils'
    version = 'master-SNAPSHOT'
    
    defaultTasks 'build'
}

dependencies {
    testCompile (
        'junit:junit:4.+',
        'org.mockito:mockito-core:1.+'
    )
    
    compile (
        "org.codehaus.groovy:groovy-all:${groovyVersion}",
        fileTree(dir: "${projectDir}/../../lib/java/all/", include: '*.jar')
    )
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
